
/**
 * Module dependencies.
 */

var parse = require('co-body');
var render = require('../lib/render');

/**
 * Configure monk.
 */

var monk = require('monk');
var wrap = require('co-monk');
var db = monk('mongodb://localhost/twapchat');
var snaps = wrap(db.get('snaps'));

/**
 * Define routes
 */

var Routes = {};

/**
 * Render index html page.
 */

Routes.index = function *index() {
  this.body = yield render('index');
};

/**
 * Render page with snap given id.
 */

Routes.show = function *show(id) {
  if (!id) this.throw(404, 'Did not provide snap id');
  var snap = yield snaps.findOne({_id: id});
  if (!snap) this.throw(404, 'Invalid snap id');
  if (--snap.views === 0) {
    // delete tweet
    // delete snap from Mongo
    // delete media from twilio
  };
  this.body = yield render('snap', { snap: snap });
};

/**
 * Create a new snap.
 */

Routes.create = function *create() {
  if (!this.request.body) return;
  var body = this.request.body;

  // Save to Mongo:
  //   @property string id (twilio message id, doubles as relative path)
  //   @property string url (absolute path to Twilio media)
  //   @property number views (start at 10?)
  //   @property string tweetId (generated by twitter, null as default)
  var snap = {
    id: body.MessageSid,
    url: body.MediaUrl0,
    views: 10,
    tweetId: null
  };
  // yield generateUrl(snap);
  // yield tweet(snap);
  // yield snaps.insert(snap);
};

/**
 * Expose `Routes`.
 */

module.exports = Routes;
